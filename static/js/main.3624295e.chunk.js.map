{"version":3,"sources":["contexts/ThemeContext.js","components/TodoItem.js","components/Timer.js","components/ThemeToggle.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","newTheme","setState","localStorage","setItem","lightTheme","JSON","parse","getItem","console","log","this","Provider","value","props","children","Component","TodoItem","themeChange","useContext","theme","completedStyle","fontStyle","color","textDecoration","buttontext","isEdited","className","style","background","type","checked","item","completed","onChange","handleChange","id","text","format","Date","deadline","e","updateInput","target","updateInputDeadline","onClick","deleteItem","editItem","Timer","useState","count","useEffect","intervalId","setInterval","clearInterval","ThemeToggle","context","contextType","App","todos","window","uuidv4","newItem","editing","bind","addTodo","updateItem","updateDeadline","handleFormSubmit","prevState","updatedTodos","map","todo","stringify","newTodo","newTodos","concat","filteredItems","filter","preventDefault","localData","result","deadlineData","todoItems","key","onSubmit","name","placeholder","htmlFor","min","length","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3624295e.chunk.js","sourcesContent":["import React, {createContext, Component} from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nclass ThemeContextProvider extends Component  {\r\n  state = {\r\n    isLightTheme: true,\r\n    light: {syntax: '#555', ui: '#ddd', bg: '#eee'},\r\n    dark: {syntax: '#ddd', ui: '#333', bg: '#555'}\r\n  }\r\n\r\n\r\n  toggleTheme = () => {\r\n    const newTheme = !this.state.isLightTheme\r\n    this.setState({isLightTheme: newTheme})\r\n    localStorage.setItem('isLightTheme', newTheme);\r\n  }\r\n\r\n\r\n  componentDidMount() { // useEffect with empty [], executed once\r\n    const lightTheme = JSON.parse(localStorage.getItem('isLightTheme'))\r\n    console.log({lightTheme})\r\n       this.setState({isLightTheme: lightTheme})\r\n  }\r\n\r\n  //componentDidUpdate\r\n  render() {\r\n    return(\r\n      <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme}}> {/*provide objects so need another {} */}\r\n        {this.props.children}\r\n      </ThemeContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ThemeContextProvider\r\n","import React, {useContext} from 'react'\r\nimport format from 'date-fns/format'\r\nimport {ThemeContext} from '../contexts/ThemeContext'\r\n\r\nfunction TodoItem(props) {\r\n  const themeChange = useContext(ThemeContext)\r\n  const theme = themeChange.isLightTheme ? themeChange.light : themeChange.dark\r\n\r\n  const completedStyle = {\r\n      fontStyle: 'italic',\r\n      //color: '#cdcdcd',\r\n      color: '#A9A9A9',\r\n      textDecoration: 'line-through'\r\n  }\r\n\r\n  const buttontext = (props.isEdited ? 'Update' : 'Edit');\r\n\r\n    return (\r\n        <div className=\"todo-item\" style={{background: theme.ui, color: theme.syntax}}>\r\n              <input\r\n                  type=\"checkbox\"\r\n                  checked={props.item.completed}\r\n                  onChange={() => props.handleChange(props.item.id)}\r\n              />\r\n\r\n              {!props.isEdited && (\r\n                <div>\r\n                  <p style={props.item.completed ? completedStyle: null}>{props.item.text}</p>\r\n                  <p style={props.item.completed ? completedStyle: null}>{format(new Date(props.item.deadline),'eee do MM yyyy')}</p>\r\n                </div>\r\n              )}\r\n\r\n            <div className=\"editable-text-dlt-edit-btn\">\r\n              {props.isEdited && (\r\n                <div>\r\n\r\n                  <div className=\"editable-text-box\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id={props.item.id}\r\n                      value={props.item.text}\r\n                      onChange={(e) => {\r\n                        props.updateInput(e.target.value, props.item.id)\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"editable-text-box\">\r\n                    <input\r\n                      type=\"date\"\r\n                      id={props.item.id}\r\n                      value={props.item.deadline}\r\n                      onChange={(e) => {\r\n                        props.updateInputDeadline(e.target.value, props.item.id)\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                </div>\r\n              )}\r\n\r\n            <div className=\"delete-btn\">\r\n              <input type=\"button\" value=\"Delete\" onClick={() => {\r\n                props.deleteItem(props.item.id)\r\n              }}/>\r\n            </div>\r\n\r\n            <div className=\"edit-btn\">\r\n              <input type=\"button\" value={buttontext} onClick={() => {\r\n                if(props.isEdited) {\r\n                  props.editItem(false)\r\n                }else {\r\n                  props.editItem(props.item.id)\r\n                }\r\n              }}/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React, {useState, useEffect} from \"react\"\r\n\r\nconst Timer = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      // setCount(prevCount => prevCount + 1)\r\n    }, 1000)\r\n    return () => clearInterval(intervalId)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <p>You have used {count} seconds on this website.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import React, {Component} from 'react';\r\nimport {ThemeContext} from '../contexts/ThemeContext';\r\n\r\nclass ThemeToggle extends Component {\r\n  static contextType = ThemeContext;\r\n  render() {\r\n    const {toggleTheme} = this.context;\r\n    return (\r\n      <button onClick={toggleTheme}>Toggle the theme</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ThemeToggle\r\n","import React from \"react\";\r\nimport TodoItem from \"./components/TodoItem\";\r\nimport todosData from \"./components/todosData\";\r\nimport Timer from \"./components/Timer\";\r\nimport ThemeContextProvider from \"./contexts/ThemeContext\";\r\n//import FlipMove from \"react-flip-move\";\r\nimport { v4 as uuidv4 } from 'uuid'; //npm install uuid\r\nimport ThemeToggle from './components/ThemeToggle';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            todos: window.localStorage.getItem('todos') ? JSON.parse(window.localStorage.getItem('todos')) : [],\r\n            //setTodos: todosData,\r\n            id: uuidv4(),\r\n            newItem: \"\",\r\n            deadline: \"\",\r\n            editing: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.addTodo = this.addTodo.bind(this)\r\n        this.updateInput = this.updateInput.bind(this)\r\n        this.deleteItem = this.deleteItem.bind(this)\r\n        this.updateItem = this.updateItem.bind(this)\r\n        this.updateDeadline = this.updateDeadline.bind(this)\r\n        this.updateInputDeadline = this.updateInputDeadline.bind(this)\r\n        this.editItem = this.editItem.bind(this)\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(id) {\r\n      this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if (todo.id === id) {\r\n            return { ...todo, completed: !todo.completed };\r\n          } else {\r\n            return todo;\r\n          }\r\n        });\r\n        localStorage.setItem('todos',JSON.stringify(updatedTodos))\r\n        return { todos: updatedTodos };\r\n      });\r\n    }\r\n\r\n    addTodo(e) {\r\n      //console.log(\"add todo\");\r\n      //e.preventDefault();\r\n      const newTodo = {\r\n        //id: this.state.todos.length + 1, // when youo delete an item, next one gets the same id and duplicate\r\n        id: uuidv4(),\r\n        text: this.state.newItem,  // text should match with the input box\r\n        completed: false,\r\n        deadline: this.state.deadline\r\n      }\r\n      const newTodos = this.state.todos.concat([newTodo]);\r\n      this.setState({\r\n        todos: newTodos,\r\n        newItem: \"\",\r\n        deadline: \"\",\r\n        id: uuidv4(),//id: this.state.todos.length + 1,\r\n        editing: false\r\n      })\r\n\r\n      localStorage.setItem('todos',JSON.stringify(newTodos))\r\n    }\r\n\r\n    updateInput(value, id) {\r\n        this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if(todo.id === id) {\r\n            return {...todo, text: value}\r\n          }else {\r\n            return todo;\r\n          }\r\n        })\r\n        localStorage.setItem('todos',JSON.stringify(updatedTodos))\r\n        return {todos: updatedTodos}\r\n      })\r\n    }\r\n\r\n    updateInputDeadline(value, id) {\r\n      //console.log(value, id);\r\n        this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if(todo.id === id) {\r\n            console.log(value, id);\r\n            return {...todo, deadline: value}\r\n          }else {\r\n            return todo;\r\n          }\r\n        })\r\n        localStorage.setItem('todos',JSON.stringify(updatedTodos))\r\n        return {todos: updatedTodos}  // update tpdps, need setItem\r\n      })\r\n    }\r\n\r\n    updateItem(e) {\r\n      this.setState({\r\n        newItem: e.target.value\r\n      })\r\n    }\r\n\r\n    updateDeadline(e) {\r\n      this.setState({\r\n        deadline: e.target.value\r\n      })\r\n    }\r\n\r\n    deleteItem(id){\r\n      //debugger\r\n    const filteredItems= this.state.todos.filter(item =>\r\n      item.id!==id); //true: keep it, false means discard(delete)\r\n      this.setState({\r\n      todos: filteredItems\r\n    })\r\n    localStorage.setItem('todos',JSON.stringify(filteredItems))\r\n  }\r\n\r\n  editItem(id) {\r\n    this.setState({\r\n      editing: id\r\n    })\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault();\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localData = localStorage.getItem('todo');\r\n    const result = localData ? localData : '';\r\n    console.log({result});\r\n    const deadlineData = localStorage.getItem('deadline');\r\n    this.setState({ result, deadlineData });\r\n  }\r\n\r\n    render() {\r\n        const todoItems = this.state.todos.map\r\n        (item =>\r\n          <TodoItem\r\n          key={item.id}\r\n          item={item}\r\n          handleChange={this.handleChange}\r\n          addTodo={this.addTodo}\r\n          deleteItem={this.deleteItem}\r\n          updateInput={this.updateInput}\r\n          updateInputDeadline={this.updateInputDeadline}\r\n          isEdited={this.state.editing === item.id}\r\n          editItem={this.editItem}\r\n        />)\r\n\r\n\r\n        return (\r\n          <ThemeContextProvider>\r\n          <div className=\"todo-list\" >\r\n\r\n              {/*<DayPicker />*/}\r\n              <Timer />\r\n\r\n              <form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"add-todo\">\r\n                  <label>Add an item...</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"todo\"\r\n                    placeholder=\"Type item here...\"\r\n                    value={this.state.newItem}\r\n                    onChange={this.updateItem}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"date\">\r\n                  <label htmlFor=\"deadline\">Deadline</label>\r\n                  <input\r\n                    type=\"date\" id=\"start\" name=\"deadline\"\r\n                    min=\"2021-01-01\"\r\n                    //max=\"2024-12-31\"\r\n                    value={this.state.deadline}\r\n                    onChange={this.updateDeadline}\r\n                  />\r\n                </div>\r\n\r\n                <button className=\"add-btn\" type=\"submit\" onClick={this.addTodo}>Add to the list</button>\r\n              </form>\r\n\r\n              {todoItems.length === 0 ? <p>No items</p> : null}\r\n\r\n              <div className=\"todoitems\" >\r\n                {todoItems}\r\n              </div>\r\n\r\n              <ThemeToggle />\r\n\r\n          </div>\r\n          </ThemeContextProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}