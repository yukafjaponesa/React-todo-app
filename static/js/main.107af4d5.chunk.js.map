{"version":3,"sources":["contexts/ThemeContext.js","components/TodoItem.js","components/Timer.js","components/ThemeToggle.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","setState","Provider","value","this","props","children","Component","TodoItem","themeChange","useContext","theme","completedStyle","fontStyle","color","textDecoration","buttontext","isEdited","className","style","background","type","checked","item","completed","onChange","handleChange","id","text","format","Date","deadline","e","updateInput","target","updateInputDeadline","onClick","deleteItem","editItem","Timer","useState","count","useEffect","intervalId","setInterval","clearInterval","ThemeToggle","context","contextType","App","todos","window","localStorage","getItem","JSON","parse","uuidv4","newItem","editing","bind","addTodo","updateItem","updateDeadline","handleFormSubmit","prevState","updatedTodos","map","todo","setItem","stringify","newTodo","newTodos","concat","console","log","filteredItems","filter","preventDefault","localData","result","deadlineData","todoItems","key","onSubmit","name","placeholder","htmlFor","min","length","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.107af4d5.chunk.js","sourcesContent":["import React, {createContext, Component} from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nclass ThemeContextProvider extends Component  {\r\n  state = {\r\n    isLightTheme: true,\r\n    light: {syntax: '#555', ui: '#ddd', bg: '#eee'},\r\n    dark: {syntax: '#ddd', ui: '#333', bg: '#555'}\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    this.setState({isLightTheme: !this.state.isLightTheme});\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme}}> {/*provide objects so need another {} */}\r\n        {this.props.children}\r\n      </ThemeContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ThemeContextProvider\r\n","import React, {useContext} from 'react'\r\nimport format from 'date-fns/format'\r\nimport {ThemeContext} from '../contexts/ThemeContext'\r\n\r\nfunction TodoItem(props) {\r\n  const themeChange = useContext(ThemeContext)\r\n  const theme = themeChange.isLightTheme ? themeChange.light : themeChange.dark\r\n\r\n  const completedStyle = {\r\n      fontStyle: 'italic',\r\n      //color: '#cdcdcd',\r\n      color: '#A9A9A9',\r\n      textDecoration: 'line-through'\r\n  }\r\n\r\n  const buttontext = (props.isEdited ? 'Update' : 'Edit');\r\n\r\n    return (\r\n        <div className=\"todo-item\" style={{background: theme.ui, color: theme.syntax}}>\r\n              <input\r\n                  type=\"checkbox\"\r\n                  checked={props.item.completed}\r\n                  onChange={() => props.handleChange(props.item.id)}\r\n              />\r\n\r\n              {!props.isEdited && (\r\n                <div>\r\n                  <p style={props.item.completed ? completedStyle: null}>{props.item.text}</p>\r\n                  <p style={props.item.completed ? completedStyle: null}>{format(new Date(props.item.deadline),'eee do MM yyyy')}</p>\r\n                </div>\r\n              )}\r\n\r\n            <div className=\"editable-text-dlt-edit-btn\">\r\n              {props.isEdited && (\r\n                <div>\r\n\r\n                  <div className=\"editable-text-box\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id={props.item.id}\r\n                      value={props.item.text}\r\n                      onChange={(e) => {\r\n                        props.updateInput(e.target.value, props.item.id)\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"editable-text-box\">\r\n                    <input\r\n                      type=\"date\"\r\n                      id={props.item.id}\r\n                      value={props.item.deadline}\r\n                      onChange={(e) => {\r\n                        props.updateInputDeadline(e.target.value, props.item.id)\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                </div>\r\n              )}\r\n\r\n            <div className=\"delete-btn\">\r\n              <input type=\"button\" value=\"Delete\" onClick={() => {\r\n                props.deleteItem(props.item.id)\r\n              }}/>\r\n            </div>\r\n\r\n            <div className=\"edit-btn\">\r\n              <input type=\"button\" value={buttontext} onClick={() => {\r\n                if(props.isEdited) {\r\n                  props.editItem(false)\r\n                }else {\r\n                  props.editItem(props.item.id)\r\n                }\r\n              }}/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React, {useState, useEffect} from \"react\"\r\n\r\nconst Timer = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      // setCount(prevCount => prevCount + 1)\r\n    }, 1000)\r\n    return () => clearInterval(intervalId)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <p>You have used {count} seconds on this website.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import React, {Component} from 'react';\r\nimport {ThemeContext} from '../contexts/ThemeContext';\r\n\r\nclass ThemeToggle extends Component {\r\n  static contextType = ThemeContext;\r\n  render() {\r\n    const {toggleTheme} = this.context;\r\n    return (\r\n      <button onClick={toggleTheme}>Toggle the theme</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ThemeToggle\r\n","import React from \"react\";\r\nimport TodoItem from \"./components/TodoItem\";\r\nimport todosData from \"./components/todosData\";\r\nimport Timer from \"./components/Timer\";\r\nimport ThemeContextProvider from \"./contexts/ThemeContext\";\r\n//import FlipMove from \"react-flip-move\";\r\nimport { v4 as uuidv4 } from 'uuid'; //npm install uuid\r\nimport ThemeToggle from './components/ThemeToggle';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            todos: window.localStorage.getItem('todos') ? JSON.parse(window.localStorage.getItem('todos')) : [],\r\n            //setTodos: todosData,\r\n            id: uuidv4(),\r\n            newItem: \"\",\r\n            deadline: \"\",\r\n            editing: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.addTodo = this.addTodo.bind(this)\r\n        this.updateInput = this.updateInput.bind(this)\r\n        this.deleteItem = this.deleteItem.bind(this)\r\n        this.updateItem = this.updateItem.bind(this)\r\n        this.updateDeadline = this.updateDeadline.bind(this)\r\n        this.updateInputDeadline = this.updateInputDeadline.bind(this)\r\n        this.editItem = this.editItem.bind(this)\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(id) {\r\n      this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if (todo.id === id) {\r\n            return { ...todo, completed: !todo.completed };\r\n          } else {\r\n            return todo;\r\n          }\r\n        });\r\n        localStorage.setItem('todos',JSON.stringify(updatedTodos))\r\n        return { todos: updatedTodos };\r\n      });\r\n    }\r\n\r\n    addTodo(e) {\r\n      //console.log(\"add todo\");\r\n      //e.preventDefault();\r\n      const newTodo = {\r\n        //id: this.state.todos.length + 1, // when youo delete an item, next one gets the same id and duplicate\r\n        id: uuidv4(),\r\n        text: this.state.newItem,  // text should match with the input box\r\n        completed: false,\r\n        deadline: this.state.deadline\r\n      }\r\n      const newTodos = this.state.todos.concat([newTodo]);\r\n      this.setState({\r\n        todos: newTodos,\r\n        newItem: \"\",\r\n        deadline: \"\",\r\n        id: uuidv4(),//id: this.state.todos.length + 1,\r\n        editing: false\r\n      })\r\n\r\n      localStorage.setItem('todos',JSON.stringify(newTodos))\r\n    }\r\n\r\n    updateInput(value, id) {\r\n        this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if(todo.id === id) {\r\n            return {...todo, text: value}\r\n          }else {\r\n            return todo;\r\n          }\r\n        })\r\n        localStorage.setItem('todos',JSON.stringify(updatedTodos))\r\n        return {todos: updatedTodos}\r\n      })\r\n    }\r\n\r\n    updateInputDeadline(value, id) {\r\n      //console.log(value, id);\r\n        this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if(todo.id === id) {\r\n            console.log(value, id);\r\n            return {...todo, deadline: value}\r\n          }else {\r\n            return todo;\r\n          }\r\n        })\r\n        localStorage.setItem('todos',JSON.stringify(updatedTodos))\r\n        return {todos: updatedTodos}  // update tpdps, need setItem\r\n      })\r\n    }\r\n\r\n    updateItem(e) {\r\n      this.setState({\r\n        newItem: e.target.value\r\n      })\r\n    }\r\n\r\n    updateDeadline(e) {\r\n      this.setState({\r\n        deadline: e.target.value\r\n      })\r\n    }\r\n\r\n    deleteItem(id){\r\n      //debugger\r\n    const filteredItems= this.state.todos.filter(item =>\r\n      item.id!==id); //true: keep it, false means discard(delete)\r\n      this.setState({\r\n      todos: filteredItems\r\n    })\r\n    localStorage.setItem('todos',JSON.stringify(filteredItems))\r\n  }\r\n\r\n  editItem(id) {\r\n    this.setState({\r\n      editing: id\r\n    })\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault();\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localData = localStorage.getItem('todo');\r\n    const result = localData ? localData : '';\r\n    console.log({result});\r\n    const deadlineData = localStorage.getItem('deadline');\r\n    this.setState({ result, deadlineData });\r\n  }\r\n\r\n    render() {\r\n        const todoItems = this.state.todos.map\r\n        (item =>\r\n          <TodoItem\r\n          key={item.id}\r\n          item={item}\r\n          handleChange={this.handleChange}\r\n          addTodo={this.addTodo}\r\n          deleteItem={this.deleteItem}\r\n          updateInput={this.updateInput}\r\n          updateInputDeadline={this.updateInputDeadline}\r\n          isEdited={this.state.editing === item.id}\r\n          editItem={this.editItem}\r\n        />)\r\n\r\n\r\n        return (\r\n          <div className=\"todo-list\" >\r\n            <ThemeContextProvider>\r\n              {/*<DayPicker />*/}\r\n              <Timer />\r\n\r\n              <form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"add-todo\">\r\n                  <label>Add an item...</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"todo\"\r\n                    placeholder=\"Type item here...\"\r\n                    value={this.state.newItem}\r\n                    onChange={this.updateItem}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"date\">\r\n                  <label htmlFor=\"deadline\">Deadline</label>\r\n                  <input\r\n                    type=\"date\" id=\"start\" name=\"deadline\"\r\n                    min=\"2021-01-01\"\r\n                    //max=\"2024-12-31\"\r\n                    value={this.state.deadline}\r\n                    onChange={this.updateDeadline}\r\n                  />\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={this.addTodo}>Add to the list</button>\r\n              </form>\r\n\r\n              {todoItems.length === 0 ? <p>No items</p> : null}\r\n\r\n              <div className=\"todoitems\" >\r\n                {todoItems}\r\n              </div>\r\n\r\n              <ThemeToggle />\r\n            </ThemeContextProvider>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}