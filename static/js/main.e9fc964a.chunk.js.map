{"version":3,"sources":["components/TodoItem.js","components/todosData.js","components/Timer.js","App.js","index.js"],"names":["TodoItem","props","completedStyle","fontStyle","color","textDecoration","buttontext","isEdited","className","type","checked","item","completed","onChange","handleChange","id","style","text","deadline","value","e","updateInput","target","updateInputDeadline","onClick","deleteItem","editItem","todosData","Timer","useState","count","setCount","useEffect","intervalId","setInterval","prevCount","clearInterval","App","state","todos","newItem","editing","bind","addTodo","updateItem","updateDeadline","this","setState","prevState","map","todo","preventDefault","newTodo","length","newTodos","concat","console","log","filteredItems","filter","todoItems","key","placeholder","htmlFor","name","min","max","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9fc964a.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction TodoItem(props) {\r\n  const completedStyle = {\r\n      fontStyle: 'italic',\r\n      color: '#cdcdcd',\r\n      textDecoration: 'line-through'\r\n  }\r\n\r\n  const buttontext = (props.isEdited ? 'Update' : 'Edit');\r\n\r\n    return (\r\n        <div className=\"todo-item\">\r\n\r\n\r\n\r\n              <input\r\n                  type=\"checkbox\"\r\n                  checked={props.item.completed}\r\n                  onChange={() => props.handleChange(props.item.id)}\r\n              />\r\n\r\n              {!props.isEdited && (\r\n                <div>\r\n                  <p style={props.item.completed ? completedStyle: null}>{props.item.text}</p>\r\n                  <p style={props.item.completed ? completedStyle: null}>{props.item.deadline}</p>\r\n                </div>\r\n              )}\r\n\r\n              {props.isEdited && (\r\n                <div>\r\n\r\n                  <div className=\"editable-text-box\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id={props.item.id}\r\n                      value={props.item.text}\r\n                      onChange={(e) => {\r\n                        props.updateInput(e.target.value, props.item.id)\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"editable-text-box\">\r\n                    <input\r\n                      type=\"date\"\r\n                      id={props.item.id}\r\n                      value={props.item.deadline}\r\n                      onChange={(e) => {\r\n                        props.updateInputDeadline(e.target.value, props.item.id)\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                </div>\r\n              )}\r\n\r\n            <div className=\"delete-btn\">\r\n              <input type=\"button\" value=\"Delete\" onClick={() => {\r\n                props.deleteItem(props.item.id)\r\n              }}/>\r\n            </div>\r\n\r\n            <div className=\"edit-btn\">\r\n              <input type=\"button\" value={buttontext} onClick={() => {\r\n                if(props.isEdited) {\r\n                  props.editItem(false)\r\n                }else {\r\n                  props.editItem(props.item.id)\r\n                }\r\n              }}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","const todosData = [\r\n    // {\r\n    //     id: 1,\r\n    //     text: \"\",\r\n    //     completed: false\r\n    // },\r\n    // {\r\n    //     id: 2,\r\n    //     text: \"Brush teeth, Thu Sep 14 2017\",\r\n    //     completed: false\r\n    // },\r\n    // {\r\n    //     id: 3,\r\n    //     text: \"Eat breakfast, Fri Sep 15 2017\",\r\n    //     completed: false\r\n    // }\r\n\r\n]\r\n\r\nexport default todosData\r\n\r\n// this.state = {\r\n//             todos:  [\r\n//     {\r\n//         id: 1,\r\n//         text: \"Get out of bed, Wed Sep 13 2017\",\r\n//         completed: false\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         text: \"Brush teeth, Thu Sep 14 2017\",\r\n//         completed: false\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         text: \"Eat breakfast, Fri Sep 15 2017\",\r\n//         completed: false\r\n//     }\r\n// ]\r\n//         }\r\n","import React, {useState, useEffect} from \"react\"\r\n\r\nconst Timer = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCount(prevCount => prevCount + 1)\r\n    }, 1000)\r\n    return () => clearInterval(intervalId)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <p>You have used {count} seconds on this website.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import React from \"react\"\r\nimport TodoItem from \"./components/TodoItem\"\r\nimport todosData from \"./components/todosData\"\r\nimport Timer from \"./components/Timer\"\r\nimport FlipMove from \"react-flip-move\"\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            todos: todosData,\r\n            //setTodos: todosData,\r\n            newItem: \"\",\r\n            deadline: \"\",\r\n            editing: false\r\n        }\r\n\r\n        // const [todos, setTodos] = useState(todosDatas);\r\n        // this.setTodos = setTodos;\r\n        // this.todos = todos;\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.addTodo = this.addTodo.bind(this)\r\n        this.updateInput = this.updateInput.bind(this)\r\n        this.deleteItem = this.deleteItem.bind(this)\r\n        this.updateItem = this.updateItem.bind(this)\r\n        this.updateDeadline = this.updateDeadline.bind(this)\r\n        this.updateInputDeadline = this.updateInputDeadline.bind(this)\r\n        this.editItem = this.editItem.bind(this)\r\n    }\r\n\r\n    handleChange(id) {\r\n      this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if (todo.id === id) {\r\n            return { ...todo, completed: !todo.completed };\r\n          } else {\r\n            return todo;\r\n          }\r\n        });\r\n        return { todos: updatedTodos };\r\n      });\r\n    }\r\n\r\n    addTodo(e) {\r\n      //console.log(\"add todo\");\r\n      e.preventDefault();\r\n      const newTodo = {\r\n        id: this.state.todos.length + 1,\r\n        text: this.state.newItem,  // text should match with the input box\r\n        completed: false,\r\n        deadline: this.state.deadline\r\n      }\r\n      const newTodos = this.state.todos.concat([newTodo]);\r\n      this.setState({\r\n        todos: newTodos\r\n      })\r\n    }\r\n\r\n    updateInput(value, id) {\r\n        this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if(todo.id === id) {\r\n            return {...todo, text: value}\r\n          }else {\r\n            return todo;\r\n          }\r\n        })\r\n        return {todos: updatedTodos}\r\n      })\r\n    }\r\n\r\n    updateInputDeadline(value, id) {\r\n      //console.log(value, id);\r\n        this.setState((prevState) => {\r\n        const updatedTodos = prevState.todos.map((todo) => {\r\n          if(todo.id === id) {\r\n            console.log(value, id);\r\n            return {...todo, deadline: value}\r\n          }else {\r\n            return todo;\r\n          }\r\n        })\r\n        return {todos: updatedTodos}\r\n      })\r\n    }\r\n\r\n    updateItem(e) {\r\n      this.setState({\r\n        newItem: e.target.value\r\n      })\r\n    }\r\n\r\n    updateDeadline(e) {\r\n      this.setState({\r\n        deadline: e.target.value\r\n      })\r\n    }\r\n\r\n    deleteItem(id){\r\n      //debugger\r\n    const filteredItems= this.state.todos.filter(item =>\r\n      item.id!==id); //true: keep it, false means discard(delete)\r\n      this.setState({\r\n      todos: filteredItems\r\n    })\r\n  }\r\n\r\n  editItem(id) {\r\n    this.setState({\r\n      editing: id\r\n    })\r\n  }\r\n\r\n\r\n\r\n    render() {\r\n        const todoItems = this.state.todos.map\r\n        (item =>\r\n          <TodoItem\r\n          key={item.id}\r\n          item={item}\r\n          handleChange={this.handleChange}\r\n          addTodo={this.addTodo}\r\n          deleteItem={this.deleteItem}\r\n          updateInput={this.updateInput}\r\n          updateInputDeadline={this.updateInputDeadline}\r\n          isEdited={this.state.editing === item.id}\r\n          editItem={this.editItem}\r\n        />)\r\n\r\n\r\n        return (\r\n          <div className=\"todo-list\">\r\n          <Timer />\r\n\r\n            <div className=\"add-todo\">\r\n              <label>Add an item...</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type item here...\"\r\n                value={this.state.newItem}\r\n                onChange={this.updateItem}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"date\">\r\n              <label htmlFor=\"deadline\">Deadline</label>\r\n              <input\r\n                type=\"date\" id=\"start\" name=\"deadline\"\r\n                min=\"2020-01-01\"\r\n                max=\"2020-12-31\"\r\n                value={this.state.deadline}\r\n                onChange={this.updateDeadline}\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.addTodo}>Add to the list</button>\r\n\r\n            {todoItems.length === 0 ? <p>No items</p> : null}\r\n\r\n            <div className=\"todoitems\">\r\n              {todoItems}\r\n            </div>\r\n\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}